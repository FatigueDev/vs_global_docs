### YamlMime:ManagedReference
items:
- uid: VSGlobal.Network
  commentId: T:VSGlobal.Network
  id: Network
  parent: VSGlobal
  children:
  - VSGlobal.Network.Broadcast``1(``0,System.String)
  - VSGlobal.Network.Subscribe(System.String)
  langs:
  - csharp
  - vb
  name: Network
  nameWithType: Network
  fullName: VSGlobal.Network
  type: Class
  source:
    remote:
      path: VSGlobal/Network.cs
      branch: main
      repo: https://github.com/FatigueDev/vs_global.git
    id: Network
    path: ../VSGlobal/Network.cs
    startLine: 12
  assemblies:
  - VSGlobal
  namespace: VSGlobal
  summary: Network allow you to send payloads to those who are subscribed to an endpoint (or multiple endpoints):<br /><xref href="VSGlobal.Network.Broadcast%60%601(%60%600%2cSystem.String)" data-throw-if-not-resolved="false"></xref><br /><xref href="VSGlobal.Network.Subscribe(System.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class Network
    content.vb: Public Module Network
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VSGlobal.Network.Broadcast``1(``0,System.String)
  commentId: M:VSGlobal.Network.Broadcast``1(``0,System.String)
  id: Broadcast``1(``0,System.String)
  parent: VSGlobal.Network
  langs:
  - csharp
  - vb
  name: Broadcast<T>(T, string)
  nameWithType: Network.Broadcast<T>(T, string)
  fullName: VSGlobal.Network.Broadcast<T>(T, string)
  type: Method
  source:
    remote:
      path: VSGlobal/Network.cs
      branch: main
      repo: https://github.com/FatigueDev/vs_global.git
    id: Broadcast
    path: ../VSGlobal/Network.cs
    startLine: 45
  assemblies:
  - VSGlobal
  namespace: VSGlobal
  summary: >-
    Called when you want to broadcast to one of your subscribed locations.<br /><code>You must call VSGlobal.Network.Subscribe("name_of_my_module_or_my_mod_id") prior to using Broadcast. Try not to use "core".</code><br />

    If we are not connected to core, the packet will be dropped safely and the event logged.

    <example>

    Example with a custom network message:

    <pre><code class="lang-csharp">//First, we define our network packet somewhere like so.

    [ProtoContract(ImplicitFields = ImplicitFields.AllPublic)]

    public class CustomNetworkMessage

    {
    	public bool didSomething;
    	public IClientPlayer sender;
    	public string message = "Default Message";
    }


    // Later on, in a function body ...


    // All we have to do is call broadcast. It's generic, so you can throw _anything_ in there. string, class, struct- Whatever.

    VsGlobal.Broadcast(new CustomNetworkMessage()

    {
    	didSomething = true,
    	sender = api.World.Player,
    	message = "Grungus"
    }, "broadcast", "my_module");

    // What that will do is send the packet to the server and relay it to others.

    // Once received, it'll invoke Events.OnPayloadReceived</code></pre></example>
  example: []
  syntax:
    content: public static Task Broadcast<T>(T packet, string module)
    parameters:
    - id: packet
      type: '{T}'
    - id: module
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function Broadcast(Of T)(packet As T, [module] As String) As Task
  overload: VSGlobal.Network.Broadcast*
  seealso:
  - linkId: VSGlobal.Events.OnPayloadReceived
    commentId: E:VSGlobal.Events.OnPayloadReceived
  nameWithType.vb: Network.Broadcast(Of T)(T, String)
  fullName.vb: VSGlobal.Network.Broadcast(Of T)(T, String)
  name.vb: Broadcast(Of T)(T, String)
- uid: VSGlobal.Network.Subscribe(System.String)
  commentId: M:VSGlobal.Network.Subscribe(System.String)
  id: Subscribe(System.String)
  parent: VSGlobal.Network
  langs:
  - csharp
  - vb
  name: Subscribe(string)
  nameWithType: Network.Subscribe(string)
  fullName: VSGlobal.Network.Subscribe(string)
  type: Method
  source:
    remote:
      path: VSGlobal/Network.cs
      branch: main
      repo: https://github.com/FatigueDev/vs_global.git
    id: Subscribe
    path: ../VSGlobal/Network.cs
    startLine: 59
  assemblies:
  - VSGlobal
  namespace: VSGlobal
  summary: Subscribe to a module to received broadcasted packets from. Call this from <xref href="VSGlobal.Events.OnConnect" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Task Subscribe(string module)
    parameters:
    - id: module
      type: System.String
      description: Our mod's ID, or any underscore separated string. E.g. "global_chat" or "hungry_hungry_hippo"
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function Subscribe([module] As String) As Task
  overload: VSGlobal.Network.Subscribe*
  nameWithType.vb: Network.Subscribe(String)
  fullName.vb: VSGlobal.Network.Subscribe(String)
  name.vb: Subscribe(String)
references:
- uid: VSGlobal.Network.Broadcast``1(``0,System.String)
  commentId: M:VSGlobal.Network.Broadcast``1(``0,System.String)
  isExternal: true
  href: VSGlobal.Network.html#VSGlobal_Network_Broadcast__1___0_System_String_
  name: Broadcast<T>(T, string)
  nameWithType: Network.Broadcast<T>(T, string)
  fullName: VSGlobal.Network.Broadcast<T>(T, string)
  nameWithType.vb: Network.Broadcast(Of T)(T, String)
  fullName.vb: VSGlobal.Network.Broadcast(Of T)(T, String)
  name.vb: Broadcast(Of T)(T, String)
  spec.csharp:
  - uid: VSGlobal.Network.Broadcast``1(``0,System.String)
    name: Broadcast
    href: VSGlobal.Network.html#VSGlobal_Network_Broadcast__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VSGlobal.Network.Broadcast``1(``0,System.String)
    name: Broadcast
    href: VSGlobal.Network.html#VSGlobal_Network_Broadcast__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: VSGlobal.Network.Subscribe(System.String)
  commentId: M:VSGlobal.Network.Subscribe(System.String)
  isExternal: true
  href: VSGlobal.Network.html#VSGlobal_Network_Subscribe_System_String_
  name: Subscribe(string)
  nameWithType: Network.Subscribe(string)
  fullName: VSGlobal.Network.Subscribe(string)
  nameWithType.vb: Network.Subscribe(String)
  fullName.vb: VSGlobal.Network.Subscribe(String)
  name.vb: Subscribe(String)
  spec.csharp:
  - uid: VSGlobal.Network.Subscribe(System.String)
    name: Subscribe
    href: VSGlobal.Network.html#VSGlobal_Network_Subscribe_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VSGlobal.Network.Subscribe(System.String)
    name: Subscribe
    href: VSGlobal.Network.html#VSGlobal_Network_Subscribe_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: VSGlobal
  commentId: N:VSGlobal
  href: VSGlobal.html
  name: VSGlobal
  nameWithType: VSGlobal
  fullName: VSGlobal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VSGlobal.Events.OnPayloadReceived
  commentId: E:VSGlobal.Events.OnPayloadReceived
  href: VSGlobal.Events.html#VSGlobal_Events_OnPayloadReceived
  name: OnPayloadReceived
  nameWithType: Events.OnPayloadReceived
  fullName: VSGlobal.Events.OnPayloadReceived
- uid: VSGlobal.Network.Broadcast*
  commentId: Overload:VSGlobal.Network.Broadcast
  href: VSGlobal.Network.html#VSGlobal_Network_Broadcast__1___0_System_String_
  name: Broadcast
  nameWithType: Network.Broadcast
  fullName: VSGlobal.Network.Broadcast
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: VSGlobal.Events.OnConnect
  commentId: E:VSGlobal.Events.OnConnect
  href: VSGlobal.Events.html#VSGlobal_Events_OnConnect
  name: OnConnect
  nameWithType: Events.OnConnect
  fullName: VSGlobal.Events.OnConnect
- uid: VSGlobal.Network.Subscribe*
  commentId: Overload:VSGlobal.Network.Subscribe
  href: VSGlobal.Network.html#VSGlobal_Network_Subscribe_System_String_
  name: Subscribe
  nameWithType: Network.Subscribe
  fullName: VSGlobal.Network.Subscribe
